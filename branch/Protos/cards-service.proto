syntax = "proto3";
import "common/transaction.proto";
import "common/card.proto";
import "common/empty.proto";

option csharp_namespace = "CardsMicroservice";

package CardsMicroservice;

service Cards {
  rpc Get (GetCardsRequest) returns (GetCardsResponse);
  rpc GetByAccounts (GetCardsByAccountsRequest) returns (GetCardsResponse);
  rpc GetBlocks (GetBlocksRequest) returns (GetBlocksResponse);
  rpc GetTransactions (GetTransactionsRequest) returns (GetTransactionsResponse);
  rpc Transfer (TransferRequest) returns (TransferResponse);
  rpc Setup(SetupRequest) returns (Empty);
}

message Block {
  string id = 1;
  string cardId = 2;
  string transactionId = 3;
  int64 timestamp = 4;
}

message GetCardsRequest {
  int64 flowId = 1;
  repeated string ids = 2;
}

message GetCardsByAccountsRequest {
  int64 flowId = 1;
  repeated string accountIds = 2;
}

message GetCardsResponse {
  repeated Card cards = 1;
}

message GetBlocksRequest {
  int64 flowId = 1;
  string cardId = 2;
}

message GetBlocksResponse {
  repeated Block blocks = 1;
}

message GetTransactionsRequest {
  int64 flowId = 1;
  repeated string ids = 2;
  int64 timestampFrom = 3;
  int64 timestampTo = 4;
}

message GetTransactionsResponse {
  repeated Transaction transactions = 1;
}

message TransferRequest {
  int64 flowId = 1;
  string cardId = 2;
  string recipient = 3;
  float amount = 4;
}

message TransferResponse {
  Transaction transaction = 1;
}

message SetupRequest {
  repeated Card cards = 1;
  repeated Block blocks = 2;
}